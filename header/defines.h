#ifndef DEFINES_H
#define DEFINES_H

#define SETBIT(DATA,BITPOS) (DATA = DATA | (1 << BITPOS))
#define CLRBIT(DATA,BITPOS) (DATA = DATA & (~(1 << BITPOS)))
#define CPLBIT(DATA,BITPOS) (DATA = DATA ^ (1 << BITPOS))

#define READBIT(DATA,BITPOS) ((DATA >> BITPOS) & 1)
#define WRITEBIT(DATA,BITPOS,BIT) (DATA = ((DATA & ~(1 << BITPOS)) | (BIT << BITPOS)))

#define READNIBBLE(DATA,NIBBLEPOS) ((DATA >> NIBBLEPOS) & 15)
#define WRITENIBBLE(DATA,NIBBLEPOS,NIBBLE) (DATA = (DATA & ~(15 << NIBBLEPOS)) |  (NIBBLE << NIBBLEPOS))

#define READBYTE(DATA,BYTEPOS) ((DATA >> BYTEPOS) & 255)
#define WRITEBYTE(DATA,BYTEPOS,BYTE) (DATA = ((DATA & ~(255 << BYTEPOS)) | (BYTE << BYTEPOS)))


#endif //defines.h